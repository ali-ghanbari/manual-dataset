"method_id","method_header","method_qualified_name","method_start_line","method_end_line"
"GS-000000","void testRemove()","com.google.gson.JsonArrayTest.testRemove()V","54","69"
"GS-000001","boolean remove(JsonElement element)","com.google.gson.JsonArray.remove(Lcom/google/gson/JsonElement;)Z","128","130"
"GS-000002","JsonElement remove(int index)","com.google.gson.JsonArray.remove(I)Lcom/google/gson/JsonElement;","141","143"
"GS-000003","void add(JsonElement element)","com.google.gson.JsonArray.add(Lcom/google/gson/JsonElement;)V","93","98"
"GS-000004","boolean contains(JsonElement element)","com.google.gson.JsonArray.contains(Lcom/google/gson/JsonElement;)Z","151","153"
"GS-000005","String getAsString()","com.google.gson.JsonElement.getAsString()Ljava/lang/String;","190","192"
"GS-000006","void testCreatingMoreThanOnce()","com.google.gson.GsonBuilderTest.testCreatingMoreThanOnce()V","42","46"
"GS-000007","Gson create()","com.google.gson.GsonBuilder.create()Lcom/google/gson/Gson;","562","573"
"GS-000008","void addTypeAdaptersForDate(String datePattern, int dateStyle, int timeStyle, List<TypeAdapterFactory> factories)","com.google.gson.GsonBuilder.addTypeAdaptersForDate(Ljava/lang/String;IILjava/util/List;)V","575","589"
"GS-000009","void testAddingAndRemovingObjectProperties()","com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties()V","30","44"
"GS-000010","void add(String property, JsonElement value)","com.google.gson.JsonObject.add(Ljava/lang/String;Lcom/google/gson/JsonElement;)V","53","58"
"GS-000011","JsonElement remove(String property)","com.google.gson.JsonObject.remove(Ljava/lang/String;)Lcom/google/gson/JsonElement;","67","69"
"GS-000012","V put(K key, V value)","com.google.gson.internal.LinkedTreeMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","90","98"
"GS-000013","V remove(Object key)","com.google.gson.internal.LinkedTreeMap.remove(Ljava/lang/Object;)Ljava/lang/Object;","110","113"
"GS-000014","boolean has(String memberName)","com.google.gson.JsonObject.has(Ljava/lang/String;)Z","150","152"
"GS-000015","JsonElement get(String memberName)","com.google.gson.JsonObject.get(Ljava/lang/String;)Lcom/google/gson/JsonElement;","160","162"
"GS-000016","void testModifiers()","com.google.gson.FieldAttributesTest.testModifiers()V","53","62"
"GS-000017","boolean hasModifier(int modifier)","com.google.gson.FieldAttributes.hasModifier(I)Z","134","136"
"GS-000018","void setUp()","com.google.gson.FieldAttributesTest.setUp()V","36","40"
"GS-000019","void testEqualsAndHashcode()","com.google.gson.JsonNullTest.testEqualsAndHashcode()V","27","32"
"GS-000020","void assertEqualsAndHashCode(Object a, Object b)","com.google.gson.common.MoreAsserts.assertEqualsAndHashCode(Ljava/lang/Object;Ljava/lang/Object;)V","65","71"
"GS-000021","void path()","com.google.gson.stream.JsonReaderPathTest.path()V","46","83"
"GS-000022","String getPath()","com.google.gson.stream.JsonReader.getPath()Ljava/lang/String;","1458","1483"
"GS-000023","void beginArray()","com.google.gson.stream.JsonReader.beginArray()V","340","352"
"GS-000024","void endArray()","com.google.gson.stream.JsonReader.endArray()V","358","370"
"GS-000025","void beginObject()","com.google.gson.stream.JsonReader.beginObject()V","376","387"
"GS-000026","void endObject()","com.google.gson.stream.JsonReader.endObject()V","393","406"
"GS-000027","String nextName()","com.google.gson.stream.JsonReader.nextName()Ljava/lang/String;","776","794"
"GS-000028","String nextString()","com.google.gson.stream.JsonReader.nextString()Ljava/lang/String;","804","830"
"GS-000029","boolean nextBoolean()","com.google.gson.stream.JsonReader.nextBoolean()Z","839","854"
"GS-000030","void nextNull()","com.google.gson.stream.JsonReader.nextNull()V","863","874"
"GS-000031","int nextInt()","com.google.gson.stream.JsonReader.nextInt()I","1154","1202"
"GS-000032","JsonReader create(String data)","com.google.gson.stream.JsonReaderPathTest$Factory.create(Ljava/lang/String;)Lcom/google/gson/stream/JsonReader;","254","254"
"GS-000033","void testStringValueSerialization()","com.google.gson.functional.StringTest.testStringValueSerialization()V","22","25"
"GS-000034","String toJson(Object src)","com.google.gson.Gson.toJson(Ljava/lang/Object;)Ljava/lang/String;","579","584"
"GS-000035","String toJson(JsonElement jsonElement)","com.google.gson.Gson.toJson(Lcom/google/gson/JsonElement;)Ljava/lang/String;","686","690"
"GS-000036","String toJson(Object src, Type typeOfSrc)","com.google.gson.Gson.toJson(Ljava/lang/Object;Ljava/lang/reflect/Type;)Ljava/lang/String;","601","605"
"GS-000037","void setUp()","com.google.gson.functional.StringTest.setUp()V","16","20"
"GS-000038","void testReadClosed()","com.google.gson.MixedStreamTest.testReadClosed()V","121","130"
"GS-000039","void close()","com.google.gson.stream.JsonReader.close()V","1207","1212"
"GS-000040","<T extends Object> T fromJson(String json, Class<T> classOfT)","com.google.gson.Gson.fromJson(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;","772","775"
"GS-000041","<T extends Object> T fromJson(String json, Type typeOfT)","com.google.gson.Gson.fromJson(Ljava/lang/String;Ljava/lang/reflect/Type;)Ljava/lang/Object;","795","803"
"GS-000042","void testPrematureClose()","com.google.gson.internal.bind.JsonTreeWriterTest.testPrematureClose()V","87","96"
"GS-000043","void close()","com.google.gson.internal.bind.JsonTreeWriter.close()V","202","207"
"GS-000044","void setLenient(boolean lenient)","com.google.gson.stream.JsonWriter.setLenient(Z)V","234","236"
"GS-000045","JsonWriter beginArray()","com.google.gson.internal.bind.JsonTreeWriter.beginArray()Lcom/google/gson/stream/JsonWriter;","94","99"
"GS-000046","void testContainsNullKeyIsAlwaysFalse()","com.google.gson.internal.LinkedTreeMapTest.testContainsNullKeyIsAlwaysFalse()V","76","80"
"GS-000047","boolean containsKey(Object key)","com.google.gson.internal.LinkedTreeMap.containsKey(Ljava/lang/Object;)Z","86","88"
"GS-000048","Node<K, V> findByObject(Object key)","com.google.gson.internal.LinkedTreeMap.findByObject(Ljava/lang/Object;)Lcom/google/gson/internal/LinkedTreeMap$Node;","183","190"
"GS-000049","void testNullName()","com.google.gson.stream.JsonWriterTest.testNullName()V","141","150"
"GS-000050","JsonWriter name(String name)","com.google.gson.stream.JsonWriter.name(Ljava/lang/String;)Lcom/google/gson/stream/JsonWriter;","385","397"
"GS-000051","JsonWriter beginObject()","com.google.gson.stream.JsonWriter.beginObject()Lcom/google/gson/stream/JsonWriter;","306","309"
"GS-000052","void testNulls()","com.google.gson.stream.JsonReaderTest.testNulls()V","192","198"
"GS-000053","JsonReader(Reader in)","com.google.gson.stream.JsonReader.<init>(Ljava/io/Reader;)V","289","294"
"GS-000054","void testNoSideEffectForHasNext()","com.google.gson.JsonStreamParserTest.testNoSideEffectForHasNext()V","51","63"
"GS-000055","boolean hasNext()","com.google.gson.JsonStreamParser.hasNext()Z","102","112"
"GS-000056","JsonToken peek()","com.google.gson.stream.JsonReader.peek()Lcom/google/gson/stream/JsonToken;","422","459"
"GS-000057","int doPeek()","com.google.gson.stream.JsonReader.doPeek()I","461","595"
"GS-000058","void setUp()","com.google.gson.JsonStreamParserTest.setUp()V","30","34"
"GS-000059","void testName()","com.google.gson.FieldAttributesTest.testName()V","68","70"
"GS-000060","FieldAttributes(Field f)","com.google.gson.FieldAttributes.<init>(Ljava/lang/reflect/Field;)V","44","47"
"GS-000061","void testOverridesDefaultExcluder()","com.google.gson.GsonTest.testOverridesDefaultExcluder()V","43","53"
"GS-000062","Gson(Excluder excluder, FieldNamingStrategy fieldNamingStrategy, Map<Type, InstanceCreator<?>> instanceCreators, boolean serializeNulls, boolean complexMapKeySerialization, boolean generateNonExecutableGson, boolean htmlSafe, boolean prettyPrinting, boolean lenient, boolean serializeSpecialFloatingPointValues, LongSerializationPolicy longSerializationPolicy, List<TypeAdapterFactory> typeAdapterFactories)","com.google.gson.Gson.<init>(Lcom/google/gson/internal/Excluder;Lcom/google/gson/FieldNamingStrategy;Ljava/util/Map;ZZZZZZZLcom/google/gson/LongSerializationPolicy;Ljava/util/List;)V","181","256"
"GS-000063","Excluder excluder()","com.google.gson.Gson.excluder()Lcom/google/gson/internal/Excluder;","258","260"
"GS-000064","FieldNamingStrategy fieldNamingStrategy()","com.google.gson.Gson.fieldNamingStrategy()Lcom/google/gson/FieldNamingStrategy;","262","264"
"GS-000065","boolean serializeNulls()","com.google.gson.Gson.serializeNulls()Z","266","268"
"GS-000066","boolean htmlSafe()","com.google.gson.Gson.htmlSafe()Z","270","272"
"GS-000067","void testIsSynthetic()","com.google.gson.FieldAttributesTest.testIsSynthetic()V","64","66"
"GS-000068","boolean isSynthetic()","com.google.gson.FieldAttributes.isSynthetic()Z","154","156"
"GS-000069","void testOverrideStringAdapter()","com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter()V","70","76"
"GS-000070","GsonBuilder registerTypeAdapter(Type type, Object typeAdapter)","com.google.gson.GsonBuilder.registerTypeAdapter(Ljava/lang/reflect/Type;Ljava/lang/Object;)Lcom/google/gson/GsonBuilder;","470","487"
"GS-000071","void checkArgument(boolean condition)","com.google.gson.internal.$Gson$Preconditions.checkArgument(Z)V","44","48"
"GS-000072","TypeToken<?> get(Type type)","com.google.gson.reflect.TypeToken.get(Ljava/lang/reflect/Type;)Lcom/google/gson/reflect/TypeToken;","295","297"
"GS-000073","TypeAdapterFactory newFactoryWithMatchRawType(TypeToken<?> exactType, Object typeAdapter)","com.google.gson.internal.bind.TreeTypeAdapter.newFactoryWithMatchRawType(Lcom/google/gson/reflect/TypeToken;Ljava/lang/Object;)Lcom/google/gson/TypeAdapterFactory;","103","108"
"GS-000074","TypeAdapterFactory newFactory(TypeToken<?> exactType, Object typeAdapter)","com.google.gson.internal.bind.TreeTypeAdapter.newFactory(Lcom/google/gson/reflect/TypeToken;Ljava/lang/Object;)Lcom/google/gson/TypeAdapterFactory;","95","97"
"GS-000075","void testIsAssignableFromRawTypes()","com.google.gson.reflect.TypeTokenTest.testIsAssignableFromRawTypes()V","40","45"
"GS-000076","boolean isAssignableFrom(Class<?> cls)","com.google.gson.reflect.TypeToken.isAssignableFrom(Ljava/lang/Class;)Z","110","113"
"GS-000077","boolean isAssignableFrom(Type from)","com.google.gson.reflect.TypeToken.isAssignableFrom(Ljava/lang/reflect/Type;)Z","121","143"
"GS-000078","<T extends Object> TypeToken<T> get(Class<T> type)","com.google.gson.reflect.TypeToken.get(Ljava/lang/Class;)Lcom/google/gson/reflect/TypeToken;","302","304"
"GS-000079","void testNullSafeBugSerialize()","com.google.gson.regression.JsonAdapterNullSafeTest.testNullSafeBugSerialize()V","29","32"
"GS-000080","void testFirstNameIsChosenForSerialization()","com.google.gson.functional.SerializedNameTest.testFirstNameIsChosenForSerialization()V","26","30"
"GS-000081","void testMultipleNamesDeserializedCorrectly()","com.google.gson.functional.SerializedNameTest.testMultipleNamesDeserializedCorrectly()V","32","39"
"GS-000082","<T extends Object> Class<T> wrap(Class<T> type)","com.google.gson.internal.Primitives.wrap(Ljava/lang/Class;)Ljava/lang/Class;","95","101"
"GS-000083","void testDirectedAcyclicGraphSerialization()","com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization()V","97","105"
"GS-000084","void setUp()","com.google.gson.functional.CircularReferenceTest.setUp()V","41","45"
"GS-000085","void testNullExposeFieldSerialization()","com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization()V","46","51"
"GS-000086","String getExpectedJson()","com.google.gson.functional.ExposeFieldsTest$ClassWithExposedFields.getExpectedJson()Ljava/lang/String;","131","139"
"GS-000087","void setUp()","com.google.gson.functional.ExposeFieldsTest.setUp()V","37","44"
"GS-000088","void testMapSerializationEmpty()","com.google.gson.functional.MapTest.testMapSerializationEmpty()V","91","96"
"GS-000089","void toJson(Object src, Type typeOfSrc, Appendable writer)","com.google.gson.Gson.toJson(Ljava/lang/Object;Ljava/lang/reflect/Type;Ljava/lang/Appendable;)V","645","652"
"GS-000090","Type getType()","com.google.gson.reflect.TypeToken.getType()Ljava/lang/reflect/Type;","100","102"
"GS-000091","void setUp()","com.google.gson.functional.MapTest.setUp()V","57","61"
"GS-000092","void testToJsonTree()","com.google.gson.functional.JsonTreeTest.testToJsonTree()V","29","40"
"GS-000093","JsonElement toJsonTree(Object src)","com.google.gson.Gson.toJsonTree(Ljava/lang/Object;)Lcom/google/gson/JsonElement;","537","542"
"GS-000094","JsonElement toJsonTree(Object src, Type typeOfSrc)","com.google.gson.Gson.toJsonTree(Ljava/lang/Object;Ljava/lang/reflect/Type;)Lcom/google/gson/JsonElement;","560","564"
"GS-000095","boolean isJsonObject()","com.google.gson.JsonElement.isJsonObject()Z","54","56"
"GS-000096","JsonObject getAsJsonObject()","com.google.gson.JsonElement.getAsJsonObject()Lcom/google/gson/JsonObject;","86","91"
"GS-000097","Set<Entry<String, JsonElement>> entrySet()","com.google.gson.JsonObject.entrySet()Ljava/util/Set;","131","133"
"GS-000098","void setUp()","com.google.gson.functional.JsonTreeTest.setUp()V","23","27"
"GS-000099","void testHashCode()","com.google.gson.internal.LazilyParsedNumberTest.testHashCode()V","21","25"
"GS-000100","int hashCode()","com.google.gson.internal.LazilyParsedNumber.hashCode()I","80","83"
"GS-000101","void testEquals()","com.google.gson.internal.LazilyParsedNumberTest.testEquals()V","27","31"
"GS-000102","boolean equals(Object obj)","com.google.gson.internal.LazilyParsedNumber.equals(Ljava/lang/Object;)Z","85","95"
"GS-000103","void testStringValueDeserialization()","com.google.gson.functional.StringTest.testStringValueDeserialization()V","27","31"
"GS-000104","void testEscapedCtrlNInStringDeserialization()","com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization()V","45","49"
"GS-000105","void testEscapedCtrlNInStringSerialization()","com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization()V","39","43"
"GS-000106","void testEscapedCtrlRInStringSerialization()","com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization()V","51","55"
"GS-000107","void testEscapedCtrlRInStringDeserialization()","com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization()V","57","61"
"GS-000108","void testEscapedBackslashInStringSerialization()","com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization()V","63","67"
"GS-000109","void testEscapedBackslashInStringDeserialization()","com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization()V","69","72"
"GS-000110","void testSingleQuoteInStringDeserialization()","com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization()V","74","78"
"GS-000111","void testEscapingQuotesInStringSerialization()","com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization()V","80","85"
"GS-000112","void testEscapingQuotesInStringDeserialization()","com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization()V","87","92"
"GS-000113","void testStringValueAsSingleElementArraySerialization()","com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization()V","94","98"
"GS-000114","void testStringWithEscapedSlashDeserialization()","com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization()V","100","105"
"GS-000115","void testAssignmentCharSerialization()","com.google.gson.functional.StringTest.testAssignmentCharSerialization()V","110","114"
"GS-000116","void testAssignmentCharDeserialization()","com.google.gson.functional.StringTest.testAssignmentCharDeserialization()V","119","127"
"GS-000117","void testJavascriptKeywordsInStringSerialization()","com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization()V","129","133"
"GS-000118","void testJavascriptKeywordsInStringDeserialization()","com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization()V","135","139"
"GS-000119","void testOurTypeFunctionality()","com.google.gson.GenericArrayTypeTest.testOurTypeFunctionality()V","43","50"
"GS-000120","void setUp()","com.google.gson.GenericArrayTypeTest.setUp()V","37","41"
"GS-000121","void testNotEquals()","com.google.gson.GenericArrayTypeTest.testNotEquals()V","52","56"
"GS-000122","void testEmptyMapNoTypeSerialization()","com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization()V","34","40"
"GS-000123","void toJson(Object src, Type typeOfSrc, JsonWriter writer)","com.google.gson.Gson.toJson(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/stream/JsonWriter;)V","659","677"
"GS-000124","JsonElement get()","com.google.gson.internal.bind.JsonTreeWriter.get()Lcom/google/gson/JsonElement;","64","69"
"GS-000125","void testEmptyMapSerialization()","com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization()V","42","50"
"GS-000126","void testNonEmptyMapSerialization()","com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization()V","52","63"
"GS-000127","void testParseComments()","com.google.gson.CommentsTest.testParseComments()V","32","44"
"GS-000128","<T extends Object> T fromJson(Reader json, Type typeOfT)","com.google.gson.Gson.fromJson(Ljava/io/Reader;Ljava/lang/reflect/Type;)Ljava/lang/Object;","849","855"
"GS-000129","void testDeclaringClass()","com.google.gson.FieldAttributesTest.testDeclaringClass()V","49","51"
"GS-000130","Class<?> getDeclaringClass()","com.google.gson.FieldAttributes.getDeclaringClass()Ljava/lang/Class;","52","54"
